<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>贪心一</title>
    <link href="/2025/06/16/%E8%B4%AA%E5%BF%83%E4%B8%80/"/>
    <url>/2025/06/16/%E8%B4%AA%E5%BF%83%E4%B8%80/</url>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;实际上，我们解决的每一个问题，都可以分成几个步骤。而贪心算法，则为每一个步骤都为<strong>局部最优解</strong>。  </p><p>&emsp;&emsp;当每一步都采用局部最优解，<strong>可以取到最终最优解</strong>时，便可以使用贪心算法。  </p><p>&emsp;&emsp;通过<strong>数据规模</strong>和<strong>题目信息</strong>联想。常见复杂度<strong>O(n)</strong> 或排序 <strong>O(n log n)</strong>。  </p><p>&emsp;&emsp;常见策略：<strong>按xx排序</strong>，<strong>能选就选</strong>，<strong>尽量选最优</strong>等等。  </p><p>&emsp;&emsp;那么，你写好一个贪心，如何检查是否正确呢？从正反两面入手，试图<strong>构造反例</strong>。从算法漏洞构造反例的过程也是很好的证明过程。考虑证明每一次选取的答案，每一次都被<strong>至少一个正确答案</strong>包含，这样最后一定不会失去所有正确答案。或者，考虑证明贪心得到的答案中，交换任意两个相邻元素，都不会使答案更优。  </p><p>&emsp;&emsp;有一些小朋友就要问了：“主包主包，我的算法证不出来，也找不到反例啊！”不慌不慌，我来教你。  </p><p>&emsp;&emsp;代码不长，测试大小样例，对拍暴力，通过大概率就对了。实在不行，多写几个贪心凑起来骗分。有排行榜，看看别人的通过速度，通过较多再试试，否则要多想。  </p><p>&emsp;&emsp;贪心作为<strong>算法思想</strong>常与其他算法<strong>搭配使用</strong>。很难见到只依赖贪心一个算法的题目。但，贪心发现的性质可能是<strong>构建解题思路的基础</strong>。  </p><p>&emsp;&emsp;题外话：小升初在即，短暂停更。不要想我！</p>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>建站祭</title>
    <link href="/2025/06/14/%E5%BB%BA%E7%AB%99%E7%A5%AD/"/>
    <url>/2025/06/14/%E5%BB%BA%E7%AB%99%E7%A5%AD/</url>
    
    <content type="html"><![CDATA[<p>2025年的6月14日，成功建造此站。<br>我会在这里写字，写字和写字</p>]]></content>
    
    
    
    <tags>
      
      <tag>祭文</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2025/06/14/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2025/06/14/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
